KubernetesCluster:
  Type: "AWS::EKS::Cluster"
  Properties:
    Name: ${self:service}-${self:provider.stage}
    ResourcesVpcConfig:
      SecurityGroupIds:
        - Ref: KubernetesClusterMasterSecurityGroup
      SubnetIds:
        - Ref: KubernetesClusterSubnetA
        - Ref: KubernetesClusterSubnetB
    RoleArn:
      Fn::GetAtt: [ EksKubernetesServiceRole, Arn ]
    Version: "1.10"
SpotNodeLaunchConfig:
  Type: AWS::AutoScaling::LaunchConfiguration
  Properties:
    AssociatePublicIpAddress: true
    # https://docs.aws.amazon.com/eks/latest/userguide/eks-optimized-ami.html
    ImageId: ami-0440e4f6b9713faf6
    #ImageId: ami-dea4d5a1
    InstanceType: t2.micro # m3.medium
    IamInstanceProfile:
      Ref: NodeInstanceProfile
    KeyName: kubernetesKey # 'Lenovo T410'
    # Maximum Spot instance price (not launch if more)
    SpotPrice: 1
    SecurityGroups:
      - Ref: NodeSecurityGroup
    # startup script
    UserData:
      Fn::Base64:
        Fn::Join:
          - ""
          -
            - "#!/bin/bash -xe\n"
            - "CA_CERTIFICATE_DIRECTORY=/etc/kubernetes/pki"
            - "\n"
            - "CA_CERTIFICATE_FILE_PATH=$CA_CERTIFICATE_DIRECTORY/ca.crt"
            - "\n"
            - "MODEL_DIRECTORY_PATH=~/.aws/eks"
            - "\n"
            - "MODEL_FILE_PATH=$MODEL_DIRECTORY_PATH/eks-2017-11-01.normal.json"
            - "\n"
            - "mkdir -p $CA_CERTIFICATE_DIRECTORY"
            - "\n"
            - "mkdir -p $MODEL_DIRECTORY_PATH"
            - "\n"
            - Fn::Join:
              - ""
              -
                - "aws eks describe-cluster --region=${self:provider.region} --name="
                - Ref: KubernetesCluster
                - " --query 'cluster.{certificateAuthorityData: certificateAuthority.data, endpoint: endpoint}' > /tmp/describe_cluster_result.json"
            - "\n"
            - "cat /tmp/describe_cluster_result.json | grep certificateAuthorityData | awk '{print $2}' | sed 's/[,\"]//g' | base64 -d >  $CA_CERTIFICATE_FILE_PATH"
            - "\n"
            - "MASTER_ENDPOINT=$(cat /tmp/describe_cluster_result.json | grep endpoint | awk '{print $2}' | sed 's/[,\"]//g')"
            - "\n"
            - "INTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)"
            - "\n"
            - "sed -i s,MASTER_ENDPOINT,$MASTER_ENDPOINT,g /var/lib/kubelet/kubeconfig"
            - "\n"
            - Fn::Join:
              - ""
              -
                - "sed -i s,CLUSTER_NAME,"
                - Ref: KubernetesCluster
                - ",g /var/lib/kubelet/kubeconfig"
            - "\n"
            - "sed -i s,REGION,${self:provider.region},g /etc/systemd/system/kubelet.service"
            - "\n"
            - "sed -i s,MAX_PODS,'12 --node-labels lifecycle=Ec2Spot',g /etc/systemd/system/kubelet.service"
            - "\n"
            - "sed -i s,INTERNAL_IP,$INTERNAL_IP,g /etc/systemd/system/kubelet.service"
            - "\n"
            - "DNS_CLUSTER_IP=10.100.0.10"
            - "\n"
            - "if [[ $INTERNAL_IP == 10.* ]] ; then DNS_CLUSTER_IP=172.20.0.10; fi"
            - "\n"
            - "sed -i s,DNS_CLUSTER_IP,$DNS_CLUSTER_IP,g  /etc/systemd/system/kubelet.service"
            - "\n"
            - "sed -i s,CERTIFICATE_AUTHORITY_FILE,$CA_CERTIFICATE_FILE_PATH,g /var/lib/kubelet/kubeconfig"
            - "\n"
            - "sed -i s,CLIENT_CA_FILE,$CA_CERTIFICATE_FILE_PATH,g  /etc/systemd/system/kubelet.service"
            - "\n"
            - "systemctl daemon-reload"
            - "\n"
            - "systemctl restart kubelet"
            - "\n"
            - "/opt/aws/bin/cfn-signal -e $? "
            - "         --stack ${self:service}-${self:provider.stage} "
            - "         --resource NodeGroup "
            - "         --region ${self:provider.region}"
SpotNodeGroup:
  Type: AWS::AutoScaling::AutoScalingGroup
  Properties:
    DesiredCapacity: 1
    LaunchConfigurationName:
      Ref: SpotNodeLaunchConfig
    # To allow rolling updates (relation: rolling updates)
    MinSize: 0
    MaxSize: 2
    VPCZoneIdentifier:
      - Ref: KubernetesClusterSubnetA
      - Ref: KubernetesClusterSubnetB
    Tags:
      - Key: Name
        Value: ${self:service}-${self:provider.stage}
        PropagateAtLaunch: true
      - Key:
          Fn::Join:
            - "/"
            -
              - "kubernetes.io"
              - "cluster"
              - "${self:service}-${self:provider.stage}"
        Value: 'owned'
        PropagateAtLaunch: 'true'
  # How to update (relation: rolling updates)
  UpdatePolicy:
    AutoScalingRollingUpdate:
      MinInstancesInService: 0
      MaxBatchSize: 1