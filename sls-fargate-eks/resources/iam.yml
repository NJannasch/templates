# Required for V1
EksKubernetesServiceRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: EksKubernetesServiceRole
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service:
              - eks.amazonaws.com
          Action: sts:AssumeRole
    ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/AmazonEKSClusterPolicy'
      - 'arn:aws:iam::aws:policy/AmazonEKSServicePolicy'

# Required for v1, but need to attach manually when creating the EKS container
# In v2, we can attach this role automatically to the auto scaling group
# gives EKS Nodes access to communciate with AWS resources
NodeInstanceRole:
  Type: AWS::IAM::Role
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service:
              - ec2.amazonaws.com
          Action: sts:AssumeRole
    Path: "/"
    Policies:
      # leave this
      - PolicyName: node
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - ec2:Describe*
                - ecr:GetAuthorizationToken
                - ecr:BatchCheckLayerAvailability
                - ecr:GetDownloadUrlForLayer
                - ecr:GetRepositoryPolicy
                - ecr:DescribeRepositories
                - ecr:ListImages
                - ecr:BatchGetImage
              Resource: "*"
      # leave this
      - PolicyName: cni
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - 
              Effect: Allow
              Action:
                - ec2:DescribeNetworkInterfaces
                - ec2:DescribeInstances
                - ec2:CreateNetworkInterface
                - ec2:AttachNetworkInterface
                - ec2:DeleteNetworkInterface
                - ec2:DetachNetworkInterface
                - ec2:ModifyNetworkInterfaceAttribute
                - ec2:AssignPrivateIpAddresses
                - tag:TagResources
              Resource: "*"
      # leave this
      - PolicyName: eks
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - 
              Effect: Allow
              Action:
                - eks:DescribeCluster
              Resource: "*"
      # this is where you could add your own permissions
      # here we are giving S3 access for put, get, list, delete
      - PolicyName: s3-management
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - 
              Effect: Allow
              Action:
                - s3:PutObject
                - s3:GetObject
                - s3:ListBucket
                - s3:DeleteObject
              Resource:
                - Fn::GetAtt: [ S3BucketAwseksspotserverlessdemodevuploads, Arn ]
                - Fn::Join:
                    - "/"
                    -
                      - Fn::GetAtt: [ S3BucketAwseksspotserverlessdemodevuploads, Arn ]
                      - "*"
            - Effect: Allow
              Action:
                - s3:PutObject
                - s3:GetObject
                - s3:ListBucket
                - s3:DeleteObject
              Resource:
                - Fn::GetAtt: [ S3BucketAwseksspotserverlessdemodevthumbnails, Arn ]
                - Fn::Join:
                    - "/"
                    -
                      - Fn::GetAtt: [ S3BucketAwseksspotserverlessdemodevthumbnails, Arn ]
                      - "*"
            - Effect: Allow
              Action:
                - s3:HeadBucket
              Resource: '*'
      # leave this
      - PolicyName: ClusterAutoscaler
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - ec2:DescribeRegions
                - ec2:DescribeInstances
              Resource: "*"
            - Effect: Allow
              Action:
                - ecr:GetAuthorizationToken
                - ecr:BatchCheckLayerAvailability
                - ecr:GetDownloadUrlForLayer
                - ecr:GetRepositoryPolicy
                - ecr:DescribeRepositories
                - ecr:ListImages
                - ecr:BatchGetImage
              Resource: "*"
            - Effect: Allow
              Action:
                - autoscaling:DescribeAutoScalingGroups
                - autoscaling:DescribeAutoScalingInstances
                - autoscaling:DescribeLaunchConfigurations
                - autoscaling:SetDesiredCapacity
                - autoscaling:DescribeTags
                - autoscaling:TerminateInstanceInAutoScalingGroup
              Resource: "*"

# the role above is attached to an AWS IAM profile
# which then is given to each EKS container
NodeInstanceProfile:
  Type: AWS::IAM::InstanceProfile
  Properties:
    Path: "/"
    Roles:
      - Ref: NodeInstanceRole
