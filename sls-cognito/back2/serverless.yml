org: garysjennings
app: ac-cog
service: sls-cognito-2

provider:
  name: aws
  runtime: nodejs12.x
  apiGateway:
    restApiId: ${output:sls-cognito-api.ApiId}
    restApiRootResourceId: ${output:sls-cognito-api.ApiResourceId}


custom:
    stage: ${opt:stage, self:provider.stage}
    region: ${opt:region, self:provider.region}
    userPoolName: my-example-userpool


functions:
    hello:
        timeout: 30
        handler: handler.hello
        events:
            - http:
                  path: /back2
                  method: get
                  cors: true
                  authorizer:
                    type: COGNITO_USER_POOLS
                    authorizerId: 
                      Ref: ApiGatewayAuthorizer
                  # authorizer: #${output:sls-cognito-api.UserPoolArn}
                  #   type: COGNITO_USER_POOLS
                  #   authorizerId: lg3zve



resources:
  Resources:
    ApiGatewayAuthorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        Name: cognito_auth-${self:service}
        RestApiId: ${output:sls-cognito-api.ApiId}
        IdentitySource: method.request.header.Authorization
        Type: COGNITO_USER_POOLS
        ProviderARNs: 
        - ${output:sls-cognito-api.UserPoolArn}

    # ApiGatewayAuthorizer:
    #   Type: AWS::ApiGateway::Authorizer
    #   Properties:
    #     AuthorizerResultTtlInSeconds: 300
    #     IdentitySource: method.request.header.Authorization
    #     Name: Cognito
    #     RestApiId:
    #       Ref: YourApiGatewayName
    #     Type: COGNITO_USER_POOLS
    #     ProviderARNs:
    #       - arn:aws:cognito-idp:${self:provider.region}:xxxxxx:userpool/abcdef



      